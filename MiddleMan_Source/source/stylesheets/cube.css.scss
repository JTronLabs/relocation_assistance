/* CUBE :: https://css-tricks.com/creating-a-3d-cube-image-gallery/ */
// toggle the cube dimensions here.
$cubeWidth: 400px;
$cubeHeight: 400px;
$cubeDepth: $cubeHeight;

$background_front:blue;
$background_left:red;
$background_right:black;
$background_back:white;
$background_top:yellow;
$background_bottom:orange;

@mixin transform($rules){
    -o-transform:$rules;
    -moz-transform:$rules;
    -ms-transform: $rules; 
    -webkit-transform:$rules; 
    transform: $rules;
}
@mixin transition($rules){
    -o-transition:$rules;
    -moz-transition:$rules;
    -ms-transition: $rules; 
    -webkit-transition:$rules; 
    transition: $rules;
}

header{
    width:50%;
    margin:0 auto;
    #logo{
        display:inline-block;
        background:black;
        border-radius: 45%;
        width:200px;
        height:auto;
    }
    #header_info{
        margin-left: 10%;
        display:inline-block;
    }
    
    #nav_div{
        $height : 2em;
        height: $height;
        width:100%;
        background:green;
        border-radius: 10px;
        nav{
            height:100%;
            width:80%;
            margin:0 auto;
            background:pink;
            a{
                text-align: center;
                text-decoration: none;
                font-size: $height * .8;
                background:orange;
                height:100%;
                margin:0;
                padding:0;
                display:inline-block;
                width:20%;
            }
        }
    }
}
/* Keep the vanishing point of the perspective constant by wrapping the cube with a div that has perspective. This ensures the perspective does not rotate with the cube */
.space3d {
    display: block;
    perspective: 1000px;
    width: $cubeWidth;
    height: $cubeHeight;
    margin:100px auto;
    
}

/* 3D Cube */
._3dbox {
    @include transition( all 0.85s cubic-bezier(0.175,0.885,0.320,1.275) );

    width: $cubeWidth;
    height: $cubeHeight;
    transform-style: preserve-3d;
    @include transform( rotateX(-15deg) rotateY(15deg));
}

._3dface {
    $pad:20px;
    width: $cubeWidth - 2 * $pad;
    height: $cubeHeight - 2 * $pad;
    padding:$pad;
    overflow: hidden;
    position: absolute;
  
    border: 2px solid #888;
    opacity: 0.9;
    
    box-shadow: inset 0 0 60px rgba(0, 0, 0, 0.1),
 0 0 50px rgba(0, 0, 0, 0.3);
}

/* Orient the faces of the cube. Axis rotate along with the cube. First rotate, then move in Z direction */
._3dface--front { @include transform( translate3d(0, 0, $cubeDepth / 2) ); }
._3dface--top { @include transform( rotateX(90deg) translate3d(0, 0, $cubeHeight / 2) ); }
._3dface--bottom { @include transform( rotateX(-90deg) translate3d(0, 0, $cubeHeight / 2) ); }
._3dface--left { @include transform( rotateY(-90deg) translate3d(0, 0, $cubeWidth / 2) ); }
._3dface--right { @include transform( rotateY(90deg) translate3d(0, 0, $cubeWidth / 2) ); }
._3dface--back { @include transform( rotateY(180deg) translate3d(0, 0, $cubeDepth / 2) ); }

  // Stlying for the faces of the cube
._3dface--front {  
    background: $background_front;
    text-align: center;
    font-size: 2em;
    color:black;
}
._3dface--left {  background: $background_left; }
._3dface--right {  
    background: $background_right;
    color:white;
}
._3dface--top {  
    background: $background_top;
    a{
        display: block;
    }
}
._3dface--bottom {  background: $background_bottom; }
._3dface--back {  background: $background_back; }

$transition_color : #eee;
.button--front {  
    background-size: 100% 200%;
    background-image: linear-gradient(to bottom, $background_front 50%, $transition_color 50%); 
}
.button--left {  
    background-size: 100% 200%;
    background-image: linear-gradient(to bottom, $background_left 50%, $transition_color 50%); 
}
.button--right {  
    background-size: 100% 200%;
    background-image: linear-gradient(to bottom, $background_right 50%, $transition_color 50%); 
}
.button--top {  
    background-size: 100% 200%;
    background-image: linear-gradient(to bottom, $background_top 50%, $transition_color 50%); 
}
.button--bottom {  
    background-size: 100% 200%;
    background-image: linear-gradient(to bottom, $background_bottom 50%, $transition_color 50%); 
}
.button--back {  
    background-size: 100% 200%;
    background-image: linear-gradient(to bottom, $background_back 50%, $transition_color 50%); 
}

.cube_buttons{
    $height:2em;
    $width:80%;
    width:$width;
    height:$height;
    display: block;
    margin: 200px auto 10px;
    
    button{
        border:0px;
        @include transition(  background-position 0.4s );
        width:16.666666666%;/* 6 sides to a cube, each button takes up 1/6 of div width */
        height:100%;
        font-size:$height * .8;
        color:black;
        cursor:pointer;

        /* Hide the text. */
        text-indent: 500%;
        white-space: nowrap;
        overflow: hidden;
    }
    button:hover{
        text-indent: 0%;/* show the text */
        background-position: 0 -100%;
    }
}
